"""
Django settings for irrigation project.

Generated by 'django-admin startproject' using Django 3.0.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""
import os
from pathlib import Path
from firebase_admin import credentials, initialize_app, firestore
import requests



BASE_DIR = Path(__file__).resolve().parent.parent
LOGIN_URL = 'signin'  

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'y#q6da%(x((cd^ac9l(zidab#v9ci1nm6*p7m8i5i%-^)5@pbr'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'irrigation'
]



STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

STATICFILES_DIRS = [
    BASE_DIR / 'irrigation' / 'static' / 'images',
]




MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
ROOT_URLCONF = 'irrigation.urls'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

cred = credentials.Certificate(BASE_DIR / 'firebase.json')
app = initialize_app(cred, {
    'databaseURL': "https://irrigatic-177d1-default-rtdb.firebaseio.com"
})

def check_internet_connectivity():
    try:
        response = requests.get("https://www.google.com")
        if response.status_code == 200:
            return True
    except requests.exceptions.RequestException:
        pass
    return False

def check_firebase_connectivity():
    try:
        response = requests.get("https://your-firebase-project.firebaseio.com")
        if response.status_code == 200:
            return True
    except requests.exceptions.RequestException:
        pass
    return False

internet_connectivity = check_internet_connectivity()
if internet_connectivity:
    print("Connecté à Internet")
else:
    print("Impossible de se connecter à Internet")

# Vérifier la connectivité Firebase
firebase_connectivity = check_firebase_connectivity()
if firebase_connectivity:
    print("Connecté à Firebase")
else:
    print("Impossible de se connecter à Firebase")
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite'
    }
}
AUTH_USER_MODEL = 'irrigation.User'
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True
